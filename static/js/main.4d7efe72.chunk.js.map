{"version":3,"sources":["components/landing.jsx","components/about.jsx","components/projects.jsx","components/resume.jsx","components/contact.jsx","components/main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Landing","react_default","a","createElement","About","Component","Projects","href","name","map","link","Resume","Contact","Main","Switch","Route","exact","path","component","App","className","lib","title","scroll","Link","to","main","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d7efe72.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst Landing = () => <div>{/* TODO [|===C3~* Pirhanna Plant approves */}</div>;\r\n\r\nexport default Landing;\r\n","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>About Me</h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n\trender() {\r\n\t\tvar links = [\r\n\t\t\t{ href: 'https://mikepreston17.github.io/GifTastic/', name: 'Gif-Tastic' },\r\n\t\t\t{ href: 'https://github.com/MikePreston17/DynamicXml', name: 'XML To POCOs' },\r\n\t\t\t{ href: 'https://github.com/MikePreston17/DesignPatterns', name: 'Design Patterns' },\r\n\t\t\t{ href: 'https://mikepreston17.github.io/RPS-Multiplayer/', name: 'RPS-Multiplayer' },\r\n\t\t\t{ href: 'https://mikepreston17.github.io/LocoMoment/', name: 'Loco-Moment' },\r\n\t\t\t{ href: 'https://github.com/MikePreston17/liri-node-app/', name: 'LIRI Bot' },\r\n\t\t\t{ href: 'https://github.com/MikePreston17/bamazon/', name: 'Bamazon' },\r\n\t\t\t{ href: 'https://agile-woodland-60817.herokuapp.com/', name: 'Burger' },\r\n\t\t\t{ href: 'https://desolate-falls-20937.herokuapp.com/', name: 'Friend Finder' },\r\n\t\t];\r\n\r\n\t\treturn (\r\n\t\t\t<ul>\r\n\t\t\t\t{links.map(link => (\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href={link.href}>{link.name}</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Resume / CV</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Resume;\r\n","import React, { Component } from 'react';\r\n\r\nconst Contact = () => (\r\n\t<div>\r\n\t\t<h1>Contact Me</h1>\r\n\t</div>\r\n);\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Landing from './landing';\r\nimport About from './about';\r\nimport Projects from './projects';\r\nimport Resume from './resume';\r\nimport Contact from './contact';\r\n\r\nconst Main = () => (\r\n\t<Switch>\r\n\t\t<Route exact path=\"/\" component={Landing} />\r\n\t\t<Route path=\"/aboutme\" component={About} />\r\n\t\t<Route path=\"/contact\" component={Contact} />\r\n\t\t<Route path=\"/projects\" component={Projects} />\r\n\t\t<Route path=\"/resume\" component={Resume} />\r\n\t</Switch>\r\n);\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Layout, Header, Footer, FooterSection, FooterLinkList, Navigation, Drawer, Content } from 'react-mdl';\r\nimport Main from './components/main';\r\nimport { Link } from 'react-router-dom';\r\nimport Resume from './components/resume';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<body>\r\n\t\t\t\t<title>Portfolio</title>\r\n\t\t\t\t<div className=\"demo-big-content\">\r\n\t\t\t\t\t{/* <h1>Hello, World!</h1> */}\r\n\t\t\t\t\t{/* justifies incorrectly */}\r\n\t\t\t\t\t<Layout>\r\n\t\t\t\t\t\t<Header title=\"Mike Preston's Portfolio!\" scroll>\r\n\t\t\t\t\t\t\t<Navigation>\r\n\t\t\t\t\t\t\t\t<Link to=\"/resume\">Resume</Link>\r\n\t\t\t\t\t\t\t\t<Link to=\"/aboutme\">About Me</Link>\r\n\t\t\t\t\t\t\t\t<Link to=\"/projects\">Projects</Link>\r\n\t\t\t\t\t\t\t\t<Link to=\"/contact\">Contact</Link>\r\n\t\t\t\t\t\t\t</Navigation>\r\n\t\t\t\t\t\t</Header>\r\n\t\t\t\t\t\t<Drawer title=\"Title\">\r\n\t\t\t\t\t\t\t<Navigation>\r\n                                <Link to=\"/resume\">Resume</Link>\r\n                                <Link to=\"/aboutme\">About Me</Link>\r\n                                <Link to=\"/projects\">Projects</Link>\r\n                                <Link to=\"/contact\">Contact</Link>\r\n\t\t\t\t\t\t\t</Navigation>\r\n\t\t\t\t\t\t</Drawer>\r\n\t\t\t\t\t\t<Content>\r\n\t\t\t\t\t\t\t<div className=\"page-content\" />\r\n\t\t\t\t\t\t\t{/* body goes here */}\r\n\t\t\t\t\t\t\t<Main />\r\n\t\t\t\t\t\t</Content>\r\n\t\t\t\t\t</Layout>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <Footer size=\"mini\">\r\n\t\t\t\t\t<FooterSection type=\"left\" logo=\"Title\">\r\n\t\t\t\t\t\t<FooterLinkList>\r\n\t\t\t\t\t\t\t<a href=\"/\">Help</a>\r\n\t\t\t\t\t\t\t<a href=\"/\">Privacy & Terms</a>\r\n\t\t\t\t\t\t</FooterLinkList>\r\n\t\t\t\t\t</FooterSection>\r\n\t\t\t\t</Footer> */}\r\n\t\t\t</body>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}